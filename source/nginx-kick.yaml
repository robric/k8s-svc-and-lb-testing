apiVersion: apps/v1
kind: Deployment
metadata:
  name: kickass-nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kickass-nginx
  template:
    metadata:
      labels:
        app: kickass-nginx
    spec:
      containers:
      - image: nginx:latest
        name: nginx
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: nginx-config
      initContainers:
      - command:
        - sh
        - -c
        - |
          export POD_NAME
          export POD_IP
          export APP_NAME
          export NODE_NAME
          cat <<EOF > /nginx/nginx.conf
          server {
              listen 80;
              server_name localhost;
              location / {
                  default_type text/plain;
                  return 200 "Welcome to NGINX!\nApplication:       $APP_NAME\nPod Name:          $POD_NAME\nNode Name:         $NODE_NAME\nIP:                $POD_IP\nRequestPort:       \$server_port\n";
              }
          }
          EOF
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: APP_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app']
        image: busybox:latest
        name: render-nginx-config
        volumeMounts:
        - mountPath: /nginx
          name: nginx-config
      restartPolicy: Always
      volumes:
      - emptyDir: {}
        name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: kickass-svc
spec:
  selector:
    app: kickass-nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP